Sociopathy
   an unusual social network
   необычная социальная сеть

Some screenshots are available in the "screenshots" folder.
Немного скриншотов лежит в папке "screenshots".

The following description is in Russian, and so are the sources
Исходники на русском

To push updated code to this git repository correctly on Windows you need to use Utf-8 version of Git for Windows:
Чтобы нормально работать с репозиторием git'а на русском, нужно поставить Utf-8'ую версию Git'а для Винды:
http://code.google.com/p/utf8-git-on-windows/

The installation process is described step by step in the "documentation/installing.txt" file
Процесс установки и запуска "с нуля" под Ubuntu описан в файле "documentation/installing.txt"

This social network is translateable to any language. Currently it is translated to Russian and English.
See the "static resources/international" folder for examples.
The language is autodetected or chosen in the user settings.

Эта соцсеть переводится на любой язык. Сейчас пока переведена на русский и английский.
Смотрите папку "static resources/international", если хотите заняться переводом.
Язык определяется сам, или используется тот, который выбран пользователем в настройках.

_________________________________________________________________________________

Используемые технологии:
   Html 5
   Css 3 (Less)
   Javascript (jQuery, Mootools, Node.js (+ Express, node-fibers), WebSocket)
   MongoDB
   NginX
   Redis
   Memcache
   ImageMagick
   Scala (Scalatra, Jetty, Gradle)

Статика отдаётся NginX'ом.
Страницы шаблонизуются прямо в окне обозревателя (jQuery Templates).
Данные отдаются базой данных через Node.js.
Что можно - кешируется Мемкешем (пока забил на это).
Redis хранит сессии и прочие данные текущего времени.
Так как Node.js падает и перезапускается из-за любой ошибки
(должно исправиться с помощью domains),
то хранение сессий и прочего в Redis'е полезно.

Доступна под GNU General Public License (см. "license.txt")

=========================================================
Внутренности
=========================================================

(Это описание, возможно, уже устарело)

Система построена по шаблону MVC:

Model - база данных MongoDB
View - html, css, javascript (+ jquery templates) прямо в окне обозревателя пользователя
Controller - Node.js

То, что первым видит пользователь, запросив страницу сайта - /страницы/основа.html.
Далее в ней изполняется /javascripts/non-static content.js,
который подгружает шаблон самой страницы и данные для неё.
Одновременно с этим подгружаются сценарии и стили страницы.

Пример:

Пользователь запрашивает адрес /сеть/болталка.
NginX в ответ на это отдаёт страницу /страницы/основа.html.
Запускается сценарий /javascripts/non-static content.js.
Он видит запрошенный адрес и понимает его как: "Показать страницу /сеть/болталка".
Подгружает и выводит на экран (в середине) содержимое шаблона /страницы/сеть/болталка.html
Подгружает стиль /облик/сеть/болталка.css
Подгружает и запускает сценарий /javascripts/на страницах/сеть/болталка.js
Этот сценарий уже запрашивает адрес /приложение/болталка/сообщения.
В ответ получает JSON со списком сообщений болталки.
Затем тот же сценарий подгружает шаблон /страницы/кусочки/сообщение болталки.html
и для каждого сообщения из JSON'а заполняет этот шаблон данными этого сообщения,
и выводит полученный html на экран.

Элементы меню добавляются в список "panel_menu" в файле /страницы/основа.html
Или в такой же список в файле /страницы/кусочки/user content.html
Затем для них рисуются "спрайты" и кладутся в папку /картинки/навершие/menu
Название "спрайту" даётся такое же, какое указано свойством "name" в списке в файле *.html