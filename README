Warning.
The encoding is broken, supposedly on GitHub itself.
To download the master branch in correct encoding,
execute "git clone git@github.com:kuchumovn/sociopathy.git" in your console
or email me: kuchumovn@gmail.com, and I'll send you the full archive via email.

Sociopathy
   необычная социальная сеть

Изпользуемые технологии:
   Html 5
   Css 3 (Less)
   Javascript (jQuery, Mootools, Node.js, Express, WebSocket)
   MongoDB
   NginX
   //Apache + v8cgi
   Redis
   Memcache
   ImageMagick
   //Scala (Sbt, Scalatra)

Статика отдаётся NginX'ом.
Страницы шаблонизуются прямо в окне обозревателя.
//Страницы шаблонизуются и отдаются Апачем (v8cgi + jQuery Templates).
Данные отдаются базой данных через Node.js.
Что можно - кешируется Мемкешем.
Redis хранит сессии и прочие данные текущего времени.
Так как Node.js падает и перезапускается из-за любой ошибки,
то хранение сессий и прочего в Redis'е полезно.

Доступна под GNU General Public License (см. "license.txt")

=========================================================

Примечания:

Apache + v8cgi больше не используются. Можно их не ставить и не настраивать.

Запуск:

поставить mongodb
поставить memcache
поставить redis
поставить node.js
поставить nginx, и в nginx.conf в разделе "http" добавить "include c:\путь к папаке sociopathy\enginex.conf;"
поставить apache (как службу; и сказать ему слушать 8082-ой порт), прикрутить к нему v8cgi, и в httpd.conf указать "DocumentRoot "c:/путь к папаке sociopathy/code/cgi""

/*
Listen 8082

LoadModule v8cgi_module c:\work\v8cgi\mod_v8cgi.dll
<IfModule mime_module>
	AddHandler v8cgi-script .ssjs .sjs
	ThreadsPerChild 1 
</IfModule>
*/

настроить "run/mongodb.bat"
настроить "run/node.js.bat"
настроить "run/memcache.bat"
настроить "run/redis.bat"
настроить "run/nginx.bat"
настроить "run/apache.bat"
запустить "запустить.bat"

зайти обозревателем по адресу localhost:8081/управление
нажать "Заполнить хранилище"

зайти обозревателем по адресу localhost:8081

по желанию:

"Выдать приглашение" себе, и прописаться по нему (зайдя по адресу localhost:8081/?приглашение=проверка)
Увидеть себя в конце страницы localhost:8081/люди

=========================================================
Внутренности
=========================================================

Система построена по шаблону MVC:

Model - база данных MongoDB
View - html, css, javascript (+ jquery templates) прямо в окне обозревателя пользователя
Controller - Node.js

То, что первым видит пользователь, запросив страницу сайта - /страницы/основа.html.
Далее в ней изполняется /javascripts/non-static content.js,
который подгружает шаблон самой страницы и данные для неё.
Одновременно с этим подгружаются сценарии и стили страницы.

Пример:

Пользователь запрашивает адрес /сеть/болталка.
NginX в ответ на это отдаёт страницу /страницы/основа.html.
Запускается сценарий /javascripts/non-static content.js.
Он видит запрошенный адрес и понимает его как: "Показать страницу /сеть/болталка".
Подгружает и выводит на экран (в середине) содержимое шаблона /страницы/сеть/болталка.html
Подгружает стиль /облик/сеть/болталка.css
Подгружает и запускает сценарий /javascripts/на страницах/сеть/болталка.js
Этот сценарий уже запрашивает адрес /приложение/болталка/сообщения.
В ответ получает JSON со списком сообщений болталки.
Затем тот же сценарий подгружает шаблон /страницы/кусочки/сообщение болталки.html
и для каждого сообщения из JSON'а заполняет этот шаблон данными этого сообщения,
и выводит полученный html на экран.

Элементы меню добавляются в список "panel_menu" в файле /страницы/основа.html
Или в такой же список в файле /страницы/кусочки/user content.html
Затем для них рисуются "спрайты" и кладутся в папку /картинки/навершие/menu
Название "спрайту" даётся такое же, какое указано свойством "name" в списке в файле *.html