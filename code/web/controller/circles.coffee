http.put '/сеть/круги/состав', (ввод, вывод, пользователь) ->
	кого = db('people').id(ввод.body.кого)
	круг = null
	
	if not ввод.body.круг?
		круги = db('circles')._.find({ пользователь: пользователь._id }, { limit: 1 })
		
		if круги.пусто()
			return вывод.send(ошибка: "Круг не найден")
		
		круг = круги[0]
	else
		круг = { _id: db('circles').id(ввод.body.круг) }
			
	db('circles')._.update({ _id: круг._id }, { $addToSet: { члены: кого } })
			
	вывод.send {}

http['delete'] '/сеть/круги/состав', (ввод, вывод, пользователь) ->
	кого = db('people').id(ввод.body.кого)
	круг = null
			
	if not ввод.body.круг?
		круги = db('circles')._.find({ пользователь: пользователь._id }, { limit: 1 })
		
		if круги.пусто()
			return вывод.send(ошибка: "Круг не найден")
		
		круг = круги[0]
	else
		круг = { _id: db('circles').id(ввод.body.круг) }
				
	db('circles')._.update({ _id: круг._id }, { $pull: { члены: кого } })
			
	вывод.send {}

http.get '/сеть/круги', (ввод, вывод, пользователь) ->
	круги = db('circles')._.find({ пользователь: пользователь._id })

	if круги.пусто()
		return вывод.send(круги: {})
				
	люди = {}
	for круг in круги
		for член in круг.члены
			люди[член + ''] = yes
	
	пользователи = []
	for _id in Object.get_keys(люди)
		пользователи.push(пользовательское.взять.await(_id))
			
	for человек in пользователи
		люди[человек._id + ''] = человек

	for круг in круги
		i = 0
		while (i < круг.члены.length)
			круг.члены[i] = люди[круг.члены[i]]
			i++
			
	вывод.send(круги: круги)