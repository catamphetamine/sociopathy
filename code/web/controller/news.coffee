http.get '/сеть/новости', (ввод, вывод, пользователь) ->
	круг = ввод.настройки.круг
	
	цепь(вывод)
		.сделать ->
			if not круг?
				return @.done('Все')
			db('circles').findOne({ пользователь: пользователь._id, круг: круг }, @)
			
		.сделать (круг) ->
			if not круг?
				console.error("Круг #{ввод.настройки.круг} не найден")
				return вывод.send(новости: [])
				
			query = {}
			if круг != 'Все'
				query.пользователь = { $in: круг.члены }
				
			снасти.batch_loading(ввод, { from: 'news', query: query }, @.в 'новости')
			
		.сделать ->
			пользовательское.подставить(@.$.новости, 'пользователь', @)
			
		.сделать ->
			вывод.send @.$
			
exports.уведомления = (пользователь, возврат) ->
	цепь(возврат)
		.сделать ->
			db('people_sessions').findOne({ пользователь: пользователь._id }, @._.в 'session')
			
		#.сделать ->
		#	db('circles').findOne({ пользователь: пользователь._id, круг: @._.session.основной_круг }, @)
			
		#.сделать (круг) ->
		.сделать (session) ->
			query = { _id: { $gt: @._.session.последняя_прочитанная_новость }}
			#if круг?
			#	query.пользователь = { $in: круг.члены }
			
			db('news').find(query).toArray(@) # where чего $not_in круг.не_учитывать
			
		.сделать (новости) ->
			@.$.новости =
				новости: []
				беседы: {}
				обсуждения: {}
				
			for новость in новости
				@.$.новости.новости.push(новость._id.toString())
				
			if not @._.session.последние_сообщения?	
				return @.return(@.$.новости)
			
			if @._.session.последние_сообщения.беседы?
				for _id, сообщение of @._.session.последние_сообщения.беседы
					if 'последние_прочитанные_сообщения.' + _id < _id
						@.$.новости.беседы.push(_id)

			# обсуждения и болталка - так же
			# в Новости. теперь не объект, а массив просто
		
			return @.return(@.$.новости)