хранилище = global.db
http = global.application_tools.http
цепь = require './../web_conveyor'

снасти = require './../tools'

хранилище.bind 'people',
	выбрать: (настройки, возврат) ->
		условия = настройки.условия || {}
		@find(условия, { skip: настройки.с - 1, limit: настройки.сколько }).toArray возврат

http.get '/люди', (ввод, вывод) ->
	цепь(вывод)
		.делать ->
			хранилище.collection('people').выбрать { с: ввод.настройки.с, сколько: ввод.настройки.сколько }, @

		.делать ->
			хранилище.collection('people').count @
		
		.сделать (люди, поголовье) ->
			есть_ли_ещё = поголовье > (ввод.настройки.с - 1 + ввод.настройки.сколько)
			пользователи = []
			for пользователь in люди
				пользователи.push(данные_человека_для_показа(пользователь), { 'только основное': yes })
			вывод.send люди: пользователи, 'есть ещё?': есть_ли_ещё 

получить_данные_человека = (address_name, вывод, возврат) ->
	цепь(вывод)
		.сделать ->
			хранилище.collection('people').findOne { 'адресное имя': address_name }, @

		.сделать (пользователь) ->
			if not пользователь?
				return вывод.send
					ошибка:
						текст: "Пользователь «#{address_name}» не состоит в нашей сети"
						уровень: 'ничего страшного'
				
			возврат null, данные_человека_для_показа(пользователь)

данные_человека_для_показа = (человек, настройки) ->
	настройки = настройки || {}

	основные_поля =
	[
		'имя'
		'адресное имя'
		'описание'
		'картинка'
		'пол'
		'откуда'
	]
	
	второстепенные_поля =
	[
		'время рождения'
		'характер'
		'убеждения'
		'семейное положение'
	]

	данные_человека = {}
	
	for поле in основные_поля
		данные_человека[поле] = человек[поле]
	
	if not настройки['только основное']?
		for поле in второстепенные_поля
			данные_человека[поле] = человек[поле]
		
	данные_человека
	
http.get '/человек', (ввод, вывод) ->
	получить_данные_человека ввод.настройки.адресное_имя, вывод, (ошибка, данные) ->
		вывод.send данные