хранилище.bind 'people',
	выбрать: (настройки, возврат) ->
		условия = настройки.условия || {}
		@find(условия, { skip: настройки.с - 1, limit: настройки.сколько }).toArray возврат

http.get '/люди', (ввод, вывод) ->
	цепь(вывод)
		.сделать ->
			if ввод.настройки.после?
				return хранилище.collection('people').find({ _id: { $lt: хранилище.collection('people').id(ввод.настройки.после) } }, { limit: ввод.настройки.сколько, sort: [['$natural', -1]] }).toArray(@.в 'люди')
			хранилище.collection('people').find({}, { limit: ввод.настройки.сколько, sort: [['$natural', -1]] }).toArray(@.в 'люди')

		.сделать (люди) ->
			return @() if люди.length == 0
			хранилище.collection('people').find({ _id: { $lt: люди[люди.length - 1]._id } }, { limit: 1, sort: [['$natural', -1]] }).toArray @
		
		.сделать (ещё_люди) ->
			есть_ли_ещё = no
			if ещё_люди.length > 0
				есть_ли_ещё = yes
				
			вывод.send(люди: @.$.люди, 'есть ещё?': есть_ли_ещё)

global.получить_данные_человека = (address_name, вывод, возврат) ->
	цепь(вывод)
		.сделать ->
			хранилище.collection('people').findOne { 'адресное имя': address_name }, @

		.сделать (пользователь) ->
			if not пользователь?
				return вывод.send
					ошибка:
						текст: "Пользователь «#{address_name}» не состоит в нашей сети"
						уровень: 'ничего страшного'
				
			возврат null, пользователь

http.get '/человек', (ввод, вывод) ->
	цепь(вывод)
		.сделать ->
			global.получить_данные_человека(ввод.настройки.адресное_имя, вывод, @.в '$')
		.сделать ->
			пользовательское.пользователь(ввод, @)
		.сделать (пользователь) ->
			хранилище.collection('circles').findOne({ пользователь: пользователь._id }, @)
		.сделать (круги) ->
			if not круги?
				return @.done()
				
			круги = круги.круги
			
			for круг, члены of круги
				for член in члены
					if член + '' == @.$._id + ''
						@.$.в_круге = круг
						return @.done()
					
			return @.done()
		.сделать ->
			вывод.send @.$
			
http.get '/человек/картинки/альбомы', (ввод, вывод) ->
	вывод.send(альбомы: [
		{ id: 'Реклама', название: 'Реклама', описание: 'Разного рода интересная западная реклама' },
		{ id: 'Портрет', название: 'Портрет', описание: 'Мои фотографии' }])
			
http.get '/человек/видео/альбомы', (ввод, вывод) ->
	вывод.send(альбомы: [
		{ id: 'Художества', название: 'Художества', описание: 'Ролики на тему искусства' },
		{ id: 'Наркоман Павлик', название: 'Наркоман Павлик', описание: 'Ну всё, огонь. Валера, настало твоё время.' }])
	
http.get '/человек/видео/альбом', (ввод, вывод) ->
	if ввод.настройки.альбом == 'Художества'
		return вывод.send(видео: [
			{ источник: 'vimeo.com', внешний_id: '37391578' },
			{ источник: 'vimeo.com', внешний_id: '31426899' }])
	
	if ввод.настройки.альбом == 'Наркоман Павлик'
		return вывод.send(видео: [
			{ источник: 'youtube.com', внешний_id: 'R3g1fkAqolQ' },
			{ источник: 'youtube.com', внешний_id: 'TT7UbfbeSjQ' }])
		
http.get '/человек/картинки/альбом', (ввод, вывод) ->
	if ввод.настройки.альбом == 'Реклама'
		return вывод.send(картинки: [
			{ имя: 'дети 1', формат: 'jpg' },
			{ имя: 'дети 2', формат: 'jpg' },
			{ имя: 'дети 3', формат: 'jpg' },
			{ имя: 'книги 1', формат: 'jpg' },
			{ имя: 'книги 2', формат: 'jpg' },
			{ имя: 'книги 3', формат: 'jpg' }])
	
	if ввод.настройки.альбом == 'Портрет'
		return вывод.send(картинки: [
			{ имя: 'гермозона', формат: 'jpg' },
			{ имя: 'аниме', формат: 'jpg' }])
		
http.get '/человек/книги', (ввод, вывод) ->
	книги = 
	[
		{
			сочинитель: 'Фритьоф Капра',
			название: 'Скрытые связи',
			id: 'Фритьоф Капра «Скрытые связи»',
			файл: 'книга.pdf',
			обложка: 'обложка.jpg'
		},
		{
			сочинитель: 'Edward Tufte',
			название: 'Visual Explanations',
			id: 'Edward Tufte «Visual Explanations»',
			ссылка: 'http://rutracker.org/forum/viewtopic.php?t=1488663',
			обложка: 'обложка.jpg'
		},
		{
			сочинитель: 'Кон И.С.',
			название: 'Мальчик — отец мужчины',
			id: 'Кон И.С. «Мальчик — отец мужчины»'
		},
		{
			сочинитель: 'Мэтью Макдональд',
			название: 'Научи свой мозг работать',
			id: 'Мэтью Макдональд «Научи свой мозг работать»'
		},
		{
			сочинитель: 'Шишков А.С.',
			название: 'Славяно-русский корнеслов'
			id: 'Шишков А.С. «Славяно-русский корнеслов»'
		},
		{
			сочинитель: 'Нюма-Дени Фюстель де Куланж',
			название: 'Гражданская община древнего мира',
			id: 'Нюма-Дени Фюстель де Куланж «Гражданская община древнего мира»'
		},
		{
			сочинитель: 'Барсенков А.С., Вдовин А.И.',
			название: 'История России. 1917-2004. Учебное пособие для вузов',
			id: 'Барсенков А.С., Вдовин А.И. «История России. 1917-2004. Учебное пособие для вузов»'
		},
		{
			сочинитель: 'Стивен Лаберж',
			название: 'Осознанное сновидение',
			id: 'Стивен Лаберж «Осознанное сновидение»'
		},
		{
			сочинитель: 'Ричард Броуди',
			название: 'Психические вирусы',
			id: 'Ричард Броуди «Психические вирусы»'
		},
		{
			сочинитель: 'Тим Харфорд',
			название: 'Экономист под прикрытием',
			id: 'Тим Харфорд «Экономист под прикрытием»'
		},
		{
			сочинитель: 'Артемий Лебедев',
			название: 'Ководство',
			id: 'Артемий Лебедев «Ководство»'
		},
		{
			сочинитель: 'Джон Гэлбрейт',
			название: 'Новое индустриальное общество',
			id: 'Джон Гэлбрейт «Новое индустриальное общество»'
		},
		{
			сочинитель: 'Станислав Гроф',
			название: 'Области человеческого безсознательного',
			id: 'Станислав Гроф «Области человеческого безсознательного»'
		},
		{
			сочинитель: 'Ян Зодерквист, Александр Бард',
			название: 'Netократия. Новая правящая элита и жизнь после капитализма',
			id: 'Ян Зодерквист, Александр Бард «Netократия. Новая правящая элита и жизнь после капитализма»'
		},
		{
			сочинитель: 'Ильин А.А.',
			название: 'Школа выживания. Как избежать голодной смерти',
			id: 'Ильин А.А. «Школа выживания. Как избежать голодной смерти»'
		},
		{
			сочинитель: 'Нассим Талеб',
			название: 'Чёрный лебедь',
			id: 'Нассим Талеб «Чёрный лебедь»'
		},
		{
			сочинитель: 'Юрий Дроздов',
			название: 'Записки начальника нелегальной разведки',
			id: 'Юрий Дроздов «Записки начальника нелегальной разведки»'
		},
		{
			сочинитель: 'Роберт Чалдини',
			название: 'Психология влияния',
			id: 'Роберт Чалдини «Психология влияния»'
		}
	]
	
	вывод.send(книги: книги)