хранилище = global.db
http = global.application_tools.http
цепь = require './../web_conveyor'

пользовательское = require './../user_tools'

http.post '/вход', (ввод, вывод) ->
	цепь(вывод)
		.сделать ->
			хранилище.collection('people').findOne { имя: ввод.body.имя }, @
		
		.сделать (пользователь) ->
			if not пользователь?
				return вывод.send ошибка: 'Такого пользователя нет в нашей сети'
		
			if пользователь.пароль != ввод.body.пароль
				return вывод.send ошибка: 'Неверный пароль'
		
			пользовательское.войти пользователь, ввод, вывод, @
			
		.сделать (пользователь) ->
			вывод.send пользователь: пользователь

http.post '/выход', (ввод, вывод) ->
	пользовательское.выйти ввод, вывод
	вывод.send {}
	
http.put '/прописать', (ввод, вывод) ->
	цепь(вывод)
		.сделать ->
			настройки =
				query:
					'ключ': ввод.body.приглашение
					
			options =
				remove: yes
			
			хранилище.collection('invites').findAndModify настройки, [], {}, options, @
			
		.сделать ->
			хранилище.collection('people').save ввод.body, @
		
		.сделать (пользователь) ->
			вывод.send ключ: пользователь._id

http.get '/приглашение/проверить', (ввод, вывод) ->
	цепь(вывод)
		.сделать ->
			хранилище.collection('invites').findOne {ключ: ввод.настройки.приглашение}, @
		
		.сделать (приглашение) ->
			if not приглашение?
				return @ 'Нет такого приглашения в списке'
				
			вывод.send приглашение: приглашение

http.get '/пользовательские_данные_для_страницы', (ввод, вывод) ->
	данные_для_страницы = {}
	
	if ввод.session?
		пользователь = ввод.session.data.пользователь
		данные_для_страницы.пользователь =
			id: пользователь._id,
			имя: пользователь.имя
			'адресное имя': пользователь['адресное имя']
	else
		if ввод.cookies.user?
			вывод.clearCookie 'user'
			данные_для_страницы.ошибка = 'Пользователь не найден'
		
	вывод.send данные_для_страницы