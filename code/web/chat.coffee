Цепочка = require './conveyor'
цепь = (вывод) -> new Цепочка('web', вывод)
цепь_websocket = (соединение) -> new Цепочка('websocket', соединение)

sanitize = require('validator').sanitize

websocket = global.websocket
хранилище = global.db
приложение = global.application
http = global.application_tools.http

болталка = websocket
	.of('/болталка')
	.on 'connection', (соединение) ->
		соединение.on 'пользователь', (id) ->
			цепь_websocket(соединение)
				.сделать ->
					хранилище.collection('people').findOne({ '_id': id }, @)
					
				.сделать (пользователь) ->
					if not пользователь?
						console.error 'Пользователь с номером ' + id + ' не найден'
						соединение.emit 'ошибка', ошибка: 'Пользователь с номером ' + id + ' не найден'
					соединение.set 'пользователь', пользователь, @
					
				.сделать ->
					соединение.emit 'готов'
		
		соединение.on 'сообщение', (сообщение) ->
			сообщение = sanitize(сообщение).xss()
			время = new Date()
			
			цепь_websocket(соединение)
				.сделать ->
					соединение.get 'пользователь', @.в 'отправитель'
					
				.сделать (отправитель) ->
					хранилище.collection('chat').save { 'отправитель': отправитель._id, 'сообщение': сообщение, 'время': время }, @
					
				.сделать () ->
					соединение.broadcast.emit('сообщение', сообщение: { отправитель: @.переменная('отправитель').имя, сообщение: сообщение, время: время })
	
		###
		соединение.emit('a message',
		{
			that: 'only',
			'/chat': 'will get'
		})
		
		болталка.emit('a message',
		{
			everyone: 'in',
			'/chat': 'will get'
		})
		###
		
http.get '/болталка/сообщения', (ввод, вывод) ->
	цепь(вывод)
		.сделать ->
			хранилище.collection('chat').count @.в 'количество сообщений'
		
		.сделать ->
			хранилище.collection('chat').выбрать { с: ввод.настройки.с, сколько: ввод.настройки.сколько, sort: [['$natural', -1]] }, @.в 'сообщения'

		.все_вместе (сообщение) ->
			хранилище.collection('people').findOne { _id: сообщение.отправитель }, @

		.сделать (отправители) ->
			@.переменная('сообщения').forEach (сообщение, индекс) ->
				сообщение.отправитель =
					имя: отправители[индекс].имя
					'адресное имя': отправители[индекс]['адресное имя']
			@()
			
		.сделать ->
			есть_ли_ещё = @.переменная('количество сообщений') > (ввод.настройки.с - 1 + ввод.настройки.сколько)
			вывод.send сообщения: @.переменная('сообщения'), 'есть ещё?': есть_ли_ещё 