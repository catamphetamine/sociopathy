http.post '/сеть/управление/приглашение/выдать', (ввод, вывод, пользователь) ->
	пользовательское.проверить_полномочия('приглашения', пользователь)
	ключ = пользовательское.приглашение()
	приглашение = db('invites')._.save({ ключ: ключ, пользователь: пользователь._id })
	вывод.send(приглашение)
	
# Database Altering Script
# used for testing, develpoment, etc
http.post '/сеть/управление/хранилище/изменить', (ввод, вывод, пользователь) ->
	пользовательское.проверить_полномочия('управляющий', пользователь)
	
	человек = db('people')._.find_one({ имя: 'Дождь со Снегом' })
	второй_человек = db('people')._.find_one({ имя: 'Анна Каренина' })

	вывод.send {}

# Database Altering Script
# used for testing, develpoment, etc
http.get '/сеть/управление/хранилище/изменить', (ввод, вывод, пользователь) ->
	пользовательское.проверить_полномочия('управляющий', пользователь)
	
	вывод.send {}
	
# currently not used
http.post '/сеть/управление/хранилище/заполнить', (ввод, вывод, пользователь) ->
	пользовательское.проверить_полномочия('управляющий', пользователь)
	
	человек = null
	второй_человек = null
	
	сколько_людей = db('people')._.count({})
			
	if сколько_людей > 1
		throw 'Кто-то уже прописался'
	
	if сколько_людей != 1
		throw 'Сначала создайте хранилище'
		
	человек = db('people')._.find_one()	

	дополнительно =
		'время рождения': new Date(1987, 11, 4)
		'о себе': { характер: 'флегматичный', убеждения: 'социализм', религия: 'научно-технический прогресс', наркотики: 'употреблял' }
		#ссылки: [ 'http://vkontakte.ru/kuchumovn', 'http://youtube.com/user/kuchumovn' ]

	db('people')._.update(человек, $set: дополнительно)	
	
	#
	
	книги = 
	[
		{
			сочинитель: 'Кон И.С.',
			название: 'Мальчик — отец мужчины'
		},
		{
			сочинитель: 'Мэтью Макдональд',
			название: 'Научи свой мозг работать'
		},
		{
			сочинитель: 'Шишков А.С.',
			название: 'Славяно-русский корнеслов'
		},
		{
			сочинитель: 'Нюма-Дени Фюстель де Куланж',
			название: 'Гражданская община древнего мира'
		},
		{
			сочинитель: 'Барсенков А.С., Вдовин А.И.',
			название: 'История России. 1917-2004. Учебное пособие для вузов'
		},
		{
			сочинитель: 'Стивен Лаберж',
			название: 'Осознанное сновидение'
		},
		{
			сочинитель: 'Ричард Броуди',
			название: 'Психические вирусы'
		},
		{
			сочинитель: 'Тим Харфорд',
			название: 'Экономист под прикрытием'
		},
		{
			сочинитель: 'Артемий Лебедев',
			название: 'Ководство'
		},
		{
			сочинитель: 'Джон Гэлбрейт',
			название: 'Новое индустриальное общество'
		},
		{
			сочинитель: 'Станислав Гроф',
			название: 'Области человеческого безсознательного'
		},
		{
			сочинитель: 'Ян Зодерквист, Александр Бард',
			название: 'Netократия. Новая правящая элита и жизнь после капитализма'
		},
		{
			сочинитель: 'Ильин А.А.',
			название: 'Школа выживания. Как избежать голодной смерти'
		},
		{
			сочинитель: 'Нассим Талеб',
			название: 'Чёрный лебедь',
		},
		{
			сочинитель: 'Юрий Дроздов',
			название: 'Записки начальника нелегальной разведки'
		},
		{
			сочинитель: 'Роберт Чалдини',
			название: 'Психология влияния'
		},
		{
			сочинитель: 'George Ritzer',
			название: 'The McDonaldization of Society',
			ссылка: 'http://rutracker.org/forum/viewtopic.php?t=3760855',
			обложка:
				большая:
					ширина: 213,
					высота: 320,
				маленькая:
					ширина: 100,
					высота: 150,
				формат: 'jpg',
				version: 1
		},
		{
			сочинитель: 'Фритьоф Капра',
			название: 'Скрытые связи',
			формат: 'pdf',
			обложка:
				большая:
					ширина: 197,
					высота: 313,
				маленькая:
					ширина: 88,
					высота: 140,
				формат: 'jpg',
				version: 1
		},
		{
			сочинитель: 'Edward Tufte',
			название: 'Visual Explanations',
			ссылка: 'http://rutracker.org/forum/viewtopic.php?t=1488663',
			обложка:
				большая:
					ширина: 250,
					высота: 315,
				маленькая:
					ширина: 100,
					высота: 126,
				формат: 'jpg',
				version: 1
		}
	]
	
	for книга in книги
		книга.добавлена = new Date()
		книга.id = книга.сочинитель + ' «' + книга.название + '»'
		db('books')._.save(книга)
	
	# заполнить книги пользователей
	
	книги = db('books')._.find()
		
	db('peoples_books')._.save({ пользователь: человек._id, книги: книги.map((книга) -> книга._id) })

	# картинки пользователя, реклама
	
	альбом =
		id: 'Реклама'
		название: 'Реклама / Раз / Два / Три'
		описание: 'Личные альбомы с картинками — каждому пользователю'
		обложка: yes
			
	альбом.пользователь = человек._id
	
	альбом = db('picture_albums')._.save(альбом)

	картинки = [
		{ id: 'дети 1', описание: "Looking at the world through children's eyes.", формат: 'jpg' },
		{ id: 'дети 2', описание: "Looking at the world through children's eyes.", формат: 'jpg' },
		{ id: 'дети 3', описание: "Looking at the world through children's eyes.", формат: 'jpg' },
		{ id: 'книги 1', описание: "Anagram bookshop", формат: 'jpg' },
		{ id: 'книги 2', описание: "Anagram bookshop", формат: 'jpg' },
		{ id: 'книги 3', описание: "Anagram bookshop", формат: 'jpg' }
	]
	
	for картинка in картинки
		картинка.альбом = альбом._id
		db('pictures')._.save(картинка)
	
	# картинки пользователя, портрет
	
	альбом =
		id: 'Портрет'
		название: 'Портрет'
		описание: 'Личные фотки'
		обложка: yes
			
	альбом.пользователь = человек._id
	
	альбом = db('picture_albums')._.save(альбом)

	картинки = [
		{ id: 'гермозона', формат: 'jpg' },
		{ id: 'работа', формат: 'jpg' }
	]
	
	for картинка in картинки
		картинка.альбом = альбом._id
		db('pictures')._.save(картинка)

	# видео пользователя
	
	альбом = 
		id: 'Vimeo.com'
		название: 'Vimeo.com'
		описание: 'Ролики'
		обложка: yes
		
	альбом.пользователь = человек._id
	
	альбом = db('video_albums')._.save(альбом)

	видеозаписи = [
		{ источник: 'vimeo.com', id: 'Rabbitoyd', внешний_id: '37391578' },
		{ источник: 'vimeo.com', id: 'Афганистан', внешний_id: '31426899' }
	]
	
	for видеозапись in видеозаписи
		видеозапись.альбом = альбом._id
		db('videos')._.save(видеозапись)
	
	# Павлик

	альбом = 
		id: 'Наркоман Павлик'
		название: 'Наркоман Павлик'
		описание: 'Приключения Павлика и его друга Дэнчика'
		обложка: yes
		
	альбом.пользователь = человек._id
	
	альбом = db('video_albums')._.save(альбом)

	видеозаписи = [
		{ источник: 'youtube.com', id: 'Павлик и Дэнчик везут вазу в Самару', описание: 'Павлик и Дэнчик везут вазу в Самару', внешний_id: 'R3g1fkAqolQ' },
		{ источник: 'youtube.com', id: 'Павлик и Дэнчик спалились', описание: 'Павлик и Дэнчик спалились', внешний_id: 'TT7UbfbeSjQ' }
	]
	
	for видеозапись in видеозаписи
		видеозапись.альбом = альбом._id
		db('videos')._.save(видеозапись)

	#
	
	db('diaries')._.save { пользователь: человек._id, id: 'Запись в дневнике, 12.05.2012 в 22:45', название: 'Запись в дневнике', запись: 'Судовой журнал или Вахтенный журнал — один из основных судовых документов. В судовом журнале фиксируются: список команды, дата прибытия в порт и отплытия из порта, глубина воды в порту и при выходе в море, скорость, курс, сила ветра во время рейса, фамилии вахтенных экипажа и вахтенных штурманов и их подробный доклад о всех событиях, происшедших за время совершения рейса.', когда: new Date() }
			
	db('diaries')._.save { пользователь: человек._id, id: 'И ещё одна, 12.05.2012 в 22:45', название: 'И ещё одна', запись: 'Сегодня ходили туда-то. Видели то-то.', когда: new Date() }
	
	db('journals')._.save { пользователь: человек._id, id: 'Автомат Калашникова, 12.05.2012 в 22:45', название: 'Автомат Калашникова', запись: 'АК-12 — российский автомат калибра 5,45 мм, перспективная разработка концерна «Ижмаш»[1]. Этот автомат разрабатывался, чтобы заменить в производстве и, возможно, на вооружении Вооружённых Сил Российской Федерации (ВС России) предыдущие варианты автоматов Калашникова — АК-74 и АК-74М, АК-103 и более ранние АКМ и АКМС.', когда: new Date() }

	db('journals')._.save { пользователь: человек._id, id: 'Сталинизм, 12.05.2012 в 22:45', название: 'Сталинизм', запись: 'Сталинский ампир (от фр. empire — «империя» и по аналогии с ампиром) — одно из лидирующих направлений в архитектуре, монументальном и декоративном искусстве СССР с середины 1940-х до середины 1950-х годов. В средствах массовой информации используется как неформальное обозначение всего многообразия сталинской эклектики. Сталинский ампир в декоре помещений — это, в частности, массивная деревянная мебель, лепнина под высокими потолками, резные шкафы, бронзовые светильники и статуэтки.', когда: new Date() }
		
	# news

	новости =
	[
		{ что: 'прописка' },
		{ что: 'создание', чего: 'раздела', какого: { _id: '', путь: 'Физика', название: 'Физика' } },
		{ что: 'создание', чего: 'раздела', какого: { _id: '', путь: 'Физика/Электромагнетизм', название: 'Электромагнетизм' }, где: { _id: '', путь: 'Физика', название: 'Физика' } },
		{ что: 'перемещение', чего: 'раздела', какого: { _id: '', путь: 'Физика/Электромагнетизм', название: 'Электромагнетизм' }, откуда: { _id: '', путь: 'Физика', название: 'Физика' }, куда: { _id: '', путь: 'Летопись', название: 'Летопись' } },
		{ что: 'удаление', чего: 'раздела', какого: { _id: '', название: 'Электромагнетизм' }, откуда: { _id: '', путь: 'Физика', название: 'Физика' } },
		{ что: 'создание', чего: 'заметки', какой: { _id: '', путь: 'Физика/Материальная точка', название: 'Материальная точка' }, где: { _id: '', путь: 'Физика', название: 'Физика' } },
		{ что: 'правка', чего: 'заметки', какой: { _id: '', путь: 'Физика/Материальная точка', название: 'Материальная точка' }, правка: { _id: '', id: '12.05.2012 в 18:07, Дождь со Снегом' } },
		{ что: 'перемещение', чего: 'заметки', какой: { _id: '', путь: 'Физика/Материальная точка', название: 'Материальная точка' }, откуда: { _id: '', путь: 'Физика/Электромагнетизм', название: 'Электромагнетизм' }, куда: { _id: '', путь: 'Физика', название: 'Физика' } },
		{ что: 'удаление', чего: 'заметки', какой: { _id: '', путь: 'Физика/Материальная точка', название: 'Материальная точка' }, откуда: { _id: '', путь: 'Физика', название: 'Физика' }  },
		{ что: 'загрузка', чего: 'картинки', какой: { альбом: { id: 'Реклама', название: 'Реклама', _id: '' }, id: 'дети 1', _id: '' } },
		{ что: 'загрузка', чего: 'картинки', какой: { альбом: { id: 'Реклама', название: 'Реклама', _id: '' }, id: 'дети 2', _id: '' } },
		{ что: 'загрузка', чего: 'картинки', какой: { альбом: { id: 'Реклама', название: 'Реклама', _id: '' }, id: 'дети 3', _id: '' } },
		{ что: 'добавление', чего: 'видеозаписи', какой: { альбом: { id: 'Художества', название: 'Художества', _id: '' }, _id: '', id: 'Rabbitoyd', источник: 'vimeo.com', внешний_id: '37391578' } },
		{ что: 'добавление', чего: 'видеозаписи', какой: { альбом: { id: 'Наркоман Павлик', название: 'Наркоман Павлик', _id: '' }, _id: '', id: 'Павлик и Дэнчик везут вазу в Самару', источник: 'youtube.com', описание: 'Павлик и Дэнчик везут вазу в Самару', внешний_id: 'R3g1fkAqolQ' } },
		{ что: 'создание', чего: 'заметки в дневнике', какой: { _id: '', id: 'Запись в дневнике, 12.05.2012 в 22:45', название: 'Запись в дневнике' } },
		{ что: 'создание', чего: 'заметки в журнале', какой: { _id: 'Автомат Калашникова, 12.05.2012 в 22:45', название: 'Автомат Калашникова' } }
	]
			
	for новость in новости
		новость.пользователь = человек._id
		новость.когда = new Date()
		db('news')._.save(новость)

	# данные читальни
		
	разделы = []
	порядок = 1
	for название in [ 'Физика', 'Строительство', 'Механизация', 'Словесность', 'Власть', 'Душеведение', 'Общество', 'Летопись' ]
		разделы.push
			название: название
			порядок: порядок
			icon_version: 1
		порядок++
			
	for раздел in разделы
		db('library_categories')._.save(раздел, { safe: yes })
			
	физика = db('library_categories')._.find_one { название: 'Физика' }
	
	электромагнетизм = 
		название: 'Электро магнетизм'
		надраздел: физика._id
		порядок: 1
		icon_version: 1
	
	db('library_categories')._.save электромагнетизм

	# заполнить пути разделов

	for раздел in db('library_categories')._.find({ название: { $ne: 'Электро магнетизм' }})
		db('library_paths')._.save({ путь: раздел.название, раздел: раздел._id })
		
	раздел = db('library_categories')._.find_one({ название: 'Электро магнетизм' })
		
	db('library_paths')._.save({ путь: 'Физика/Электро магнетизм', раздел: раздел._id })

	# заметка
		
	физика = db('library_categories')._.find_one { название: 'Физика' }
		
	заметка = "<абзац>Материальная точка — объект, не имеющий размеров, но обладающий всеми остальными свойствами (массой, зарядом и т.п.).</абзац>

		<абзац>Используется в физике <формула положение='в строке'>f(x,y,z) = 3y^2 z \\left( 3 + \\frac{7x+5}{1 + y^2} \\right)</формула> в качестве <код>упрощённой модели</код> относительно малого объекта (относительно малого в рамках задачи). Например, при расчёте пути, пройденного поездом из Петрограда во Владивосток, можно пренебречь его очертаниями и размерами, поскольку они гораздо меньше протяжённости пути.</абзац>

		<выдержка><текст>Война - это путь обмана. Поэтому, даже если [ты] способен, показывай противнику свою неспособность. Когда должен ввести в бой свои силы, притворись бездеятельным. Когда [цель] близко, показывай, будто она далеко; когда же она действительн далеко, создавай впечатление, что она близко</текст><автор>Cунь Цзы, «Искусство Войны»</автор></выдержка>
		
		<абзац>Вставим сюда картинку: <картинка ширина='128' высота='128' положение='в строке'>http://cdn1.iconfinder.com/data/icons/49handdrawing/128x128/picture.png</картинка>, вставили.</абзац>
		
		<youtube>quYfLkJMN1g</youtube>
		
		<vimeo>47387431</vimeo>
		
		<абзац>Однако <жирный>не всегда</жирный> можно <курсив>пользоваться</курсив> материальными<сверху>1</сверху> точками<снизу>2</снизу> для решения задач. Например, при расчёте распределения энергии молекул в <ссылка на='/читальня/химия/инертный газ'>инертном газе</ссылка> можно представить молекулы материальными точками (шариками). Однако для других веществ начинает иметь значение строение молекулы, так как </абзац>
		
		<многострочный_код>колебание() new_line  и new_line    вращение()</многострочный_код>
		
		<абзац>самой молекулы начинают запасать в себе значительную энергию.</абзац>
		
		<audio название='Михаил Хазин на передаче \"Экономика по-русски\" — Первомай. Марксизм. Капитализм. Средний класс. Кризис.'>http://cs5304.userapi.com/u739427/audio/68e9367ecd7d.mp3</audio>
		
		<заголовок_2>Ссылки</заголовок_2>

		<список>
			<пункт><ссылка на='http://ru.wikipedia.org/wiki/Материальная_точка'>WikiPedia</ссылка></пункт>
			<пункт><ссылка на='http://phys.msu.ru/'>ФизФак МГУ</ссылка></пункт>
		</список>"
	
	заметка = заметка.replace_all('\n', '')
	заметка = заметка.replace_all('new_line', '\n')
	заметка = заметка.replace_all('\t', '')
	
	материальная_точка = 
		название: 'Материальная точка'
		раздел: физика._id
		порядок: 1
		содержимое: заметка
	
	db('library_articles')._.save материальная_точка
	
	# заполнить пути заметок

	заметка = db('library_articles')._.find_one({})
		
	db('library_paths')._.save({ путь: 'Физика/Материальная точка', заметка: заметка._id, разделы: [заметка.раздел] })
		
	# всё
	
	вывод.send { ok: 'хранилище заполнено' }

http.get '/хранилище/создано ли', (ввод, вывод) ->
	count = null
	
	try
		count = db('people')._.count({})
	catch ошибка
		if ошибка.message != 'ns not found'
			console.error ошибка
			throw ошибка
		
	вывод.send(создано: count > 0)

http.post '/хранилище/создать', (ввод, вывод) ->
	человек = null
	
	разделы = null
	
	console.log('* Создаём хранилище')
	
	обсуждение = null
	беседа = null
	
	чистое_хранилище = yes
	
	count = null
	
	try
		count = db('people')._.count({})
	catch ошибка
		if ошибка.message != 'ns not found'
			console.error ошибка
			throw ошибка
		
	if count > 0
		чистое_хранилище = no
		
	if not чистое_хранилище
		console.error 'Database Drop attempt'
		throw 'Хранилище уже заполнено, и не может быть перезаписано'
	
	console.log('* Можно')
		
	# заполнить людей
	
	console.log('* Заполняем людей')
				
	хранилище.create_collection('people', [['почта', yes], ['имя', yes], ['id', yes]])

	# заполнить сессии людей
					
	console.log('* Sessions')
	
	хранилище.create_collection('people_sessions', [['пользователь', yes]])
	
	# заполнить тайные ключи людей
	
	console.log('* Private keys')
	
	хранилище.create_collection('people_private_keys', [['пользователь', yes], ['тайный ключ', yes]])
	
	# заполнить приглашения
		
	console.log('* Invites')
	
	хранилище.create_collection('invites', [['ключ', yes]])

	# создать управляющего
	
	console.log('* Creating system administrator')
	
	administrator = {}
	
	if ввод.данные.administrator?
		administrator = JSON.parse(ввод.данные.administrator)
	
	# временное
	if administrator.gender?
		if administrator.gender == 'male'
			administrator.gender = 'мужской'
		else
			administrator.gender = 'женский'
	
	database_schema = International[ввод.cookies.language].Database
	
	# это следует также вынести в translation
	человек =
		имя: administrator[database_schema.people.name]
		описание: administrator[database_schema.people.description]
		пол: administrator[database_schema.people.gender]
		откуда: administrator[database_schema.people.origin]
		пароль: administrator[database_schema.people.password]
		почта: administrator[database_schema.people.email]
		
	человек.полномочия = ['управляющий']
			
	пользовательское.создать(человек)
					
	#хранилище.create_collection('diaries', [[[[ 'пользователь', 1 ], [ 'id', 1 ]], yes], ['время', no]])
	#хранилище.create_collection('journals', [[[[ 'пользователь', 1 ], [ 'id', 1 ]], yes], ['время', no]])
	#хранилище.create_collection('drafts', [[[['пользователь', 1], ['что', 1]], no], [[['пользователь', 1], ['заметка', 1]], yes]])
	
	# готово
	
	console.log('* Done')
		
	вывод.send { ok: 'хранилище создано' }